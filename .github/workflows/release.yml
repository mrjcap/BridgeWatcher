name: Release Process

on:
  workflow_dispatch:
    inputs:
      version_bump_type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: patch

jobs:
  # Test job - runs unconditionally
  test:
    uses: ./.github/workflows/ci.yml
    secrets: inherit

  # Gatekeeper job - determines if release should proceed
  gatekeeper:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      next_version: ${{ steps.determine_version.outputs.version }}
      changelog_updated: ${{ steps.check_changelog.outputs.updated }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure all tags are available
      
      - name: Set up PowerShell
        shell: pwsh
        run: |
          Write-Host "PowerShell version: $($PSVersionTable.PSVersion)"
      
      - name: Calculate potential next version
        id: determine_version
        shell: pwsh
        run: |
          $version = & ./scripts/Get-PotentialNextVersion.ps1 -BumpType '${{ github.event.inputs.version_bump_type }}' -Verbose
          Write-Host "Calculated version: $version"
          echo "version=$version" >> $env:GITHUB_OUTPUT
      
      - name: Check commits and update changelog
        id: check_changelog
        shell: pwsh
        run: |
          & ./scripts/Update-ReleaseChangeLog.ps1 -Version '${{ steps.determine_version.outputs.version }}' -Verbose
          
          # Read the flag file
          if (Test-Path './changelog_updated.flag') {
            $updated = Get-Content './changelog_updated.flag' -Raw
            Write-Host "Changelog updated: $updated"
            echo "updated=$updated" >> $env:GITHUB_OUTPUT
          } else {
            Write-Host "Flag file not found, assuming no update"
            echo "updated=false" >> $env:GITHUB_OUTPUT
          }
      
      - name: Output gatekeeper decision & commit CHANGELOG.md
        shell: pwsh
        run: |
          if ('${{ steps.check_changelog.outputs.updated }}' -eq 'true') {
            Write-Host "✅ New changes detected. Proceeding with release for version ${{ steps.determine_version.outputs.version }}"
      
            # Commit & push updated CHANGELOG.md
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add CHANGELOG.md
            git commit -m "ci: update CHANGELOG.md for v${{ steps.determine_version.outputs.version }}" || Write-Host "No changes to commit"
            git push origin HEAD:${env:GITHUB_REF -replace 'refs/heads/', ''}
          } else {
            Write-Host "⏸️ No new changes detected or changelog already up-to-date. Skipping release steps."
          }

  # Documentation job - only runs if changelog was updated
  docs:
    needs: gatekeeper
    if: needs.gatekeeper.outputs.changelog_updated == 'true'
    uses: ./.github/workflows/powershell-docs.yml
    secrets: inherit

  # Publish job - handles the actual release
  publish:
    needs: [gatekeeper, docs]
    if: needs.gatekeeper.outputs.changelog_updated == 'true'
    uses: ./.github/workflows/publish.yml
    with:
      next_version: ${{ needs.gatekeeper.outputs.next_version }}
    secrets: inherit

  # Docker build job - only runs after successful publish
  docker:
    needs: [gatekeeper, publish]
    if: needs.gatekeeper.outputs.changelog_updated == 'true' && needs.publish.outputs.module_published == 'true'
    uses: ./.github/workflows/docker-build.yml
    with:
      version: ${{ needs.gatekeeper.outputs.next_version }}
    secrets: inherit
