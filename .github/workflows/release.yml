name: Release Process

on:
  workflow_dispatch:
    inputs:
      version_bump_type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: patch

permissions:
  contents: write
  pull-requests: read

jobs:
  pre-release:
    name: Pre-release Checks
    runs-on: ubuntu-latest
    steps:
      - name: Print start
        run: echo "Ξεκινάει η διαδικασία release..."

  test:
    name: Module Tests
    uses: ./.github/workflows/ci.yml
    needs: pre-release
    secrets: inherit

  codacy:
    name: Codacy Analysis
    needs: test # ή [test, test-matrix] κτλ.
    uses: ./.github/workflows/codequality.yml
    secrets:
      CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
  
  gatekeeper:
    name: Gatekeeper & Changelog
    runs-on: ubuntu-latest
    needs: [test, codacy]
    outputs:
      next_version: ${{ steps.determine_version.outputs.version }}
      changelog_updated: ${{ steps.commit_changelog.outputs.changelog_updated }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up PowerShell
        shell: pwsh
        run: |
          Write-Host "PowerShell version: $($PSVersionTable.PSVersion)"

      - name: Calculate potential next version
        id: determine_version
        shell: pwsh
        run: |
          $version = & ./scripts/Get-PotentialNextVersion.ps1 -BumpType '${{ github.event.inputs.version_bump_type }}' -Verbose
          Write-Host "Calculated version: $version"
          echo "version=$version" >> $env:GITHUB_OUTPUT
      - name: Build Changelog with mikepenz/release-changelog-builder-action
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          mode: "HYBRID"
          outputFile: CHANGELOG.md
          includeOpen: false
          fetchViaCommits: true
          commitMode: false
          configurationJson: |
            {
              "template": "## [#{{TO_TAG}}] - #{{TO_TAG_DATE}}\n\n#{{CHANGELOG}}\n\n---\n",
              "categories": [
                {
                  "title": "### ✨ Νέα χαρακτηριστικά",
                  "rules": [
                    {
                      "pattern": "^(feat|feature|add|προστέθ|προσθήκη|νέο)",
                      "flags": "i"
                    }
                  ]
                },
                {
                  "title": "### 🐛 Διορθώσεις",
                  "rules": [
                    {
                      "pattern": "^(fix|bug|διορθ|διόρθ|σφαλμ)",
                      "flags": "i"
                    }
                  ]
                },
                {
                  "title": "### 🔧 CI & Συντήρηση",
                  "rules": [
                    {
                      "pattern": "^(ci:|chore:|build:|αναβάθμιση|ενημέρωση(?!.*changelog))",
                      "flags": "i"
                    }
                  ]
                },
                {
                  "title": "### 📝 Τεκμηρίωση",
                  "rules": [
                    {
                      "pattern": "^(docs|documentation|readme|τεκμηρ|changelog)",
                      "flags": "i"
                    }
                  ]
                }
              ],
              "pr_template": "- #{{TITLE}} ([#{{SHA_SHORT}}]({{URL}}))",
              "empty_template": "- Καμία σημαντική αλλαγή σε αυτή την έκδοση 🎉",
              "sort": {
                "order": "DESC",
                "on_property": "mergedAt"
              },
              "max_tags_to_fetch": 50
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit & push updated CHANGELOG.md
        id: commit_changelog
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [[ $(git status --porcelain CHANGELOG.md) ]]; then
            git add CHANGELOG.md
            git commit -m "ci: auto-update CHANGELOG.md for v${{ steps.determine_version.outputs.version }}"
            git push origin HEAD:$(git rev-parse --abbrev-ref HEAD)
            echo "changelog_updated=true" >> $GITHUB_OUTPUT
          else
            echo "No changes in CHANGELOG.md"
            echo "changelog_updated=false" >> $GITHUB_OUTPUT
          fi

  test-matrix:
    name: Multi-OS/Version Tests
    runs-on: ${{ matrix.os }}
    needs: gatekeeper
    if: needs.gatekeeper.outputs.changelog_updated == 'true'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        pwsh_version: ["7.3.x", "7.4.x"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Pester
        shell: pwsh
        run: Install-Module Pester -Force -Scope CurrentUser

      - name: Run Matrix Tests
        shell: pwsh
        run: |
          if (Test-Path ./Tests/PesterConfiguration.psd1) {
            Invoke-Pester -Configuration (Import-PowerShellDataFile ./Tests/PesterConfiguration.psd1)
          } else {
            Write-Error "PesterConfiguration.psd1 not found!"
            exit 1
          }

  docs:
    name: Documentation Generation
    needs: [gatekeeper, test-matrix]
    if: needs.gatekeeper.outputs.changelog_updated == 'true'
    uses: ./.github/workflows/powershell-docs.yml
    secrets: inherit

  publish:
    name: Publish Module
    needs: [gatekeeper, docs, test-matrix]
    if: needs.gatekeeper.outputs.changelog_updated == 'true'
    uses: ./.github/workflows/publish.yml
    with:
      next_version: ${{ needs.gatekeeper.outputs.next_version }}
    secrets: inherit

  docker:
    name: Docker Build & Push
    needs: [gatekeeper, publish, test-matrix]
    if: needs.gatekeeper.outputs.changelog_updated == 'true' && needs.publish.outputs.module_published == 'true'
    uses: ./.github/workflows/docker-build.yml
    with:
      version: ${{ needs.gatekeeper.outputs.next_version }}
    secrets: inherit
