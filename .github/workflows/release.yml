name: Release Process

on:
  workflow_dispatch:
    inputs:
      version_bump_type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: patch

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  pre-release:
    name: Pre-release Checks
    runs-on: ubuntu-latest
    steps:
      - name: Print start
        run: echo "Ξεκινάει η διαδικασία release..."

  test:
    name: Module Tests
    needs: pre-release
    uses: ./.github/workflows/ci.yml
    secrets: inherit

  codacy:
    name: Codacy Analysis
    needs: test
    uses: ./.github/workflows/codequality.yml
    secrets:
      CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

  gatekeeper:
    name: Gatekeeper (Changelog builder)
    runs-on: ubuntu-latest
    needs: [pre-release, test, codacy]
    outputs:
      next_version: ${{ steps.determine_version.outputs.version }}
      changelog_changed: ${{ steps.detect_changelog_changes.outputs.changelog_changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0

      - name: Calculate potential next version
        id: determine_version
        shell: pwsh
        env:
          VERSION_BUMP_TYPE: ${{ github.event.inputs.version_bump_type }}
        run: |
          $version = & ./scripts/Get-PotentialNextVersion.ps1 -BumpType $Env:VERSION_BUMP_TYPE -Verbose
          Write-Host "Calculated version: $version"
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Build Changelog (mikepenz/release-changelog-builder-action)
        id: build_changelog # Το id παραμένει ίδιο, δεν το αλλάζουμε
        uses: mikepenz/release-changelog-builder-action@5fb6e51e44d4aea73f66549f425aa3ed5008109e
        with:
          # ΑΛΛΑΓΗ: Χρήση εξωτερικού αρχείου configuration αντί για inline JSON
          configuration: ".github/workflows/changelog-configuration.json"
          # ΑΛΛΑΓΗ: Προσθήκη toTag για να ξέρει το action ποια έκδοση φτιάχνει
          toTag: "v${{ steps.determine_version.outputs.version }}"
          # ΑΛΛΑΓΗ: Βάζουμε mode: 'COMMIT' καθώς βασιζόμαστε σε commit messages
          mode: 'COMMIT'
          outputFile: CHANGELOG.md
          includeOpen: false
          fetchViaCommits: true
          # commitMode: false # Το mode: 'COMMIT' υπερισχύει, οπότε αυτό μπορεί να αφαιρεθεί ή να γίνει true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG: true # Το αφήνουμε για τώρα, χρήσιμο για debugging

      - name: Detect CHANGELOG.md changes
        id: detect_changelog_changes
        run: |
          if git status --porcelain CHANGELOG.md | grep 'CHANGELOG.md'; then
            echo "changelog_changed=true" >> $GITHUB_OUTPUT
          else
            echo "changelog_changed=false" >> $GITHUB_OUTPUT
          fi

  changelog-pr:
    name: "Auto PR για αλλαγή CHANGELOG.md"
    runs-on: ubuntu-latest
    needs: gatekeeper
    if: needs.gatekeeper.outputs.changelog_changed == 'true'
    outputs:
      changelog_pr_opened: ${{ steps.create-pr.outputs.pull-request-number }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Build Changelog Again (για το PR)
        uses: mikepenz/release-changelog-builder-action@5fb6e51e44d4aea73f66549f425aa3ed5008109e
        with:
          configuration: ".github/workflows/changelog-configuration.json"
          toTag: "v${{ needs.gatekeeper.outputs.next_version }}"
          mode: 'COMMIT'
          outputFile: CHANGELOG.md
          includeOpen: false
          fetchViaCommits: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG: true # Το αφήνουμε για τώρα

      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            docs: auto-update CHANGELOG.md για έκδοση v${{ needs.gatekeeper.outputs.next_version }}
            
            Αυτόματη ενημέρωση του CHANGELOG από το GitHub Actions workflow.
          title: "📝 Auto-update CHANGELOG.md για v${{ needs.gatekeeper.outputs.next_version }}"
          body: |
            ## 🤖 Αυτόματη Ενημέρωση CHANGELOG
            
            Αυτό το PR δημιουργήθηκε αυτόματα από το Release Process workflow.
            
            ### 📋 Αλλαγές
            - Ενημέρωση του CHANGELOG.md με τις νέες αλλαγές για την έκδοση `v${{ needs.gatekeeper.outputs.next_version }}`
            
            ### ✅ Checklist
            - [ ] Έλεγχos ότι το CHANGELOG περιλαμβάνει όλες τις σημαντικές αλλαγές
            - [ ] Έλεγχος ορθής κατηγοριοποίησης των αλλαγών
            - [ ] Έλεγχος ορθογραφίας και μορφοποίησης
            
            ---
            *Δημιουργήθηκε από GitHub Actions* 🚀
          branch: changelog/update-v${{ needs.gatekeeper.outputs.next_version }}-${{ github.run_number }}
          branch-suffix: timestamp
          delete-branch: true
          labels: |
            auto-changelog
            documentation
          assignees: ${{ github.actor }}
          reviewers: ${{ github.actor }}

      - name: Enable Pull Request Automerge
        if: steps.create-pr.outputs.pull-request-number
        run: |
          echo "Pull Request created: #${{ steps.create-pr.outputs.pull-request-number }}"
          echo "URL: ${{ steps.create-pr.outputs.pull-request-url }}"

  test-matrix:
    name: Multi-OS/Version Tests
    runs-on: ${{ matrix.os }}
    needs: [changelog-pr]
    if: always() && needs.gatekeeper.outputs.changelog_changed == 'false'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        pwsh_version: ['7.3.x', '7.4.x']
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Install Pester
        shell: pwsh
        run: Install-Module Pester -Force -Scope CurrentUser

      - name: Run Matrix Tests
        shell: pwsh
        run: |
          if (Test-Path ./Tests/PesterConfiguration.psd1) {
            Invoke-Pester -Configuration (Import-PowerShellDataFile ./Tests/PesterConfiguration.psd1)
          } else {
            Write-Error "PesterConfiguration.psd1 not found!"
            exit 1
          }

  docs:
    name: Documentation Generation
    needs: [gatekeeper, test-matrix]
    if: always() && needs.gatekeeper.outputs.changelog_changed == 'false'
    uses: ./.github/workflows/powershell-docs.yml
    secrets: inherit

  publish:
    name: Publish Module
    needs: [gatekeeper, docs, test-matrix]
    if: always() && needs.gatekeeper.outputs.changelog_changed == 'false'
    uses: ./.github/workflows/publish.yml
    with:
      next_version: ${{ needs.gatekeeper.outputs.next_version }}
    secrets: inherit

  docker:
    name: Docker Build & Push
    needs: [gatekeeper, publish, test-matrix]
    if: |
      always() &&
      needs.gatekeeper.outputs.changelog_changed == 'false' &&
      (needs.publish.outputs.module_published == 'true' || needs.publish.outputs.module_published == '') 
      # Προσθήκη ελέγχου για κενή τιμή στο module_published, καθώς μπορεί να μην οριστεί αν το publish job παραλειφθεί
      # ή αν δεν έχει οριστεί το output στο publish.yml υπό όλες τις συνθήκες.
      # Ιδανικά, το publish.yml θα πρέπει πάντα να εξάγει μια σαφή τιμή (true/false).
    uses: ./.github/workflows/docker-build.yml
    with:
      version: ${{ needs.gatekeeper.outputs.next_version }}
    secrets: inherit
