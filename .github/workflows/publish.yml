name: Publish to PowerShell Gallery

on:
  push:
    branches:
      - main # Adjust this to the branch you want to trigger the action

jobs:
  publish:
    runs-on: windows-latest # Use the Windows runner for PowerShell

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup PowerShell
        uses: actions/setup-powershell@v2

      - name: Install Pester
        run: |
          Install-Module -Name Pester -RequiredVersion 5.4.2 -Force -SkipPublisherCheck

      - name: Run Pester Tests
        env:
          TestPath: ./Tests/*.Tests.ps1
        run: |
          if (Test-Path -Path $env:TestPath) {
            Invoke-Pester -Path $env:TestPath -EnableExit
          } else {
            Write-Warning "No tests found at $env:TestPath. Skipping tests."
          }

      - name: Publish module to PowerShell Gallery
        env:
          PSGalleryApiKey: ${{ secrets.PSGalleryApiKey }}
          ModulePath: ./src
        run: |
          if (!$env:PSGalleryApiKey) {
            Write-Error "PSGalleryApiKey is not set. Ensure it is added as a GitHub Secret."
            exit 1
          }

          if (-Not (Test-Path -Path $env:ModulePath)) {
            Write-Error "Module path $env:ModulePath does not exist. Check the workflow configuration."
            exit 1
          }

          try {
            Publish-Module -Name 'BridgeWatcher' -Path $env:ModulePath -NuGetApiKey $env:PSGalleryApiKey -Force
          } catch {
            Write-Error "Failed to publish the module: $_"
            exit 1
          }
