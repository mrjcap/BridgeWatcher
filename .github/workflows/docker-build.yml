name: Build, Test and Push Docker image

on:
  workflow_call:
    inputs:
      published:
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  build-and-test:
    if: ${{ inputs.published == 'true' }}
    runs-on: ubuntu-latest
    outputs:
      image_version: ${{ steps.extract-version.outputs.image_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract version from tag
        id: extract-version
        run: |
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "latest")
          echo "image_version=${TAG#v}" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build -f Docker/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:${{ steps.extract-version.outputs.image_version }} .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:${{ steps.extract-version.outputs.image_version }} ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:latest

      - name: Run container for testing
        run: |
          mkdir secrets
          echo "dummy" > secrets/API_KEY
          echo "dummy" > secrets/POAPI_KEY
          echo "dummy" > secrets/POUSER_KEY
          IMAGE_TAG=${{ steps.extract-version.outputs.image_version }}
          docker run --rm -d --name bridgewatcher-test -v ${{ github.workspace }}/secrets:/run/secrets ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:$IMAGE_TAG
          sleep 5
      - name: Check container logs
        run: docker logs bridgewatcher-test
      - name: Test output directory exists
        run: docker exec bridgewatcher-test ls -l /tmp/
      - name: Test process exists
        run: docker exec bridgewatcher-test ps aux
      - name: Test output file exists
        run: docker exec bridgewatcher-test test -f /tmp/bridge_status.json
      - name: Show output file
        run: docker exec bridgewatcher-test cat /tmp/bridge_status.json
      - name: Stop test container
        if: always()
        run: docker stop bridgewatcher-test || true
      - name: Save Docker image
        run: |
          IMAGE_TAG=${{ steps.extract-version.outputs.image_version }}
          docker save ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:$IMAGE_TAG | gzip > bridgewatcher.tar.gz
        if: always()
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: bridgewatcher-image
          path: bridgewatcher.tar.gz
        if: always()

  push:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: needs.build-and-test.outputs.image_version != ''
    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: bridgewatcher-image

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Load Docker image
        run: |
          gunzip -c bridgewatcher.tar.gz | docker load

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:${{ needs.build-and-test.outputs.image_version }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:latest