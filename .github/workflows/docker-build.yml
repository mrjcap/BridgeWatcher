name: Build, Test and Push Docker image

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  build-and-test:
    runs-on: self-hosted
    outputs:
      image_version: ${{ steps.extract-version.outputs.image_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2

      - name: Log in to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Use Provided Version
        id: extract-version
        run: |
          echo "image_version=${{ inputs.version }}" >> $GITHUB_OUTPUT

      - name: Build Docker image with labels
        run: |
          docker build -f Docker/Dockerfile \
            --label "org.opencontainers.image.version=${{ steps.extract-version.outputs.image_version }}" \
            --label "org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
            --label "org.opencontainers.image.source=${{ github.repositoryUrl }}" \
            --label "maintainer=mrjcap" \
            --label "org.opencontainers.image.description=BridgeWatcher PowerShell module docker image" \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:${{ steps.extract-version.outputs.image_version }} .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:${{ steps.extract-version.outputs.image_version }} ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:latest

      - name: Run container for testing
        run: |
          mkdir secrets
          echo "dummy" > secrets/API_KEY
          echo "dummy" > secrets/POAPI_KEY
          echo "dummy" > secrets/POUSER_KEY
          IMAGE_TAG=${{ steps.extract-version.outputs.image_version }}
          docker run --rm -d --name bridgewatcher-test -v ${{ github.workspace }}/secrets:/run/secrets ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:$IMAGE_TAG
          sleep 5

      - name: Check container logs
        run: |
          docker logs bridgewatcher-test | tee container_logs.txt

      - name: Test output directory exists
        run:
          docker exec bridgewatcher-test ls -l /tmp/ | tee
          output_dir_listing.txt

      - name: Test process exists
        run: docker exec bridgewatcher-test ps aux | tee container_ps.txt

      - name: Test output file exists
        run: docker exec bridgewatcher-test test -f /tmp/bridge_status.json

      - name: Show output file
        run:
          docker exec bridgewatcher-test cat /tmp/bridge_status.json | tee
          bridge_status.json.txt

      - name: Stop test container
        if: always()
        run: docker stop bridgewatcher-test || true

      - name: Save Docker image
        run: |
          IMAGE_TAG=${{ steps.extract-version.outputs.image_version }}
          docker save ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:$IMAGE_TAG | gzip > bridgewatcher.tar.gz
        if: always()

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: bridgewatcher-image
          path: bridgewatcher.tar.gz
        if: always()

      - name: Upload container logs artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: container-logs
          path: |
            container_logs.txt
            output_dir_listing.txt
            container_ps.txt
            bridge_status.json.txt
        if: always()

      - name: Docker system prune (cleanup)
        if: always()
        run: docker system prune -af

  push:
    runs-on: self-hosted
    needs: build-and-test
    if: needs.build-and-test.outputs.image_version != ''
    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093
        with:
          name: bridgewatcher-image

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2

      - name: Log in to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Load Docker image
        run: |
          gunzip -c bridgewatcher.tar.gz | docker load

      - name: Tag Docker image as latest
        run: |
          IMAGE_TAG=${{ needs.build-and-test.outputs.image_version }}
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:$IMAGE_TAG ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:latest

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:${{ needs.build-and-test.outputs.image_version }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:latest

      - name: Docker system prune (cleanup)
        if: always()
        run: docker system prune -af
