name: Build, Test and Push Docker image
on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v*'
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      image_version: ${{ steps.extract-version.outputs.image_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract version from tag if available
        id: extract-version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            echo "image_version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
            echo "image_version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          else
            echo "image_version=" >> $GITHUB_ENV
            echo "image_version=" >> $GITHUB_OUTPUT
          fi
      - name: Build Docker image
        run: |
          if [ -z "$image_version" ]; then
            docker build -f Docker/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:latest .
          else
            docker build -f Docker/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:$image_version .
            docker tag ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:$image_version ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:latest
          fi
      - name: Run container for testing
        run: |
          mkdir secrets
          echo "dummy" > secrets/API_KEY
          echo "dummy" > secrets/POAPI_KEY
          echo "dummy" > secrets/POUSER_KEY
          IMAGE_TAG=${image_version:-latest}
          docker run --rm -d --name bridgewatcher-test -v ${{ github.workspace }}/secrets:/run/secrets ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:$IMAGE_TAG
          sleep 5
      - name: Check container logs
        run: docker logs bridgewatcher-test
      - name: Test output directory exists
        run: docker exec bridgewatcher-test ls -l /tmp/
      - name: Test process exists
        run: docker exec bridgewatcher-test ps aux
      - name: Test output file exists
        run: docker exec bridgewatcher-test test -f /tmp/bridge_status.json
      - name: Show output file
        run: docker exec bridgewatcher-test cat /tmp/bridge_status.json
      - name: Stop test container
        if: always()
        run: docker stop bridgewatcher-test || true
      - name: Save Docker image
        run: |
          IMAGE_TAG=${image_version:-latest}
          docker save ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:$IMAGE_TAG | gzip > bridgewatcher.tar.gz
        if: always()
        # Το αρχείο αυτό θα το χρησιμοποιήσει το επόμενο job
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: bridgewatcher-image
          path: bridgewatcher.tar.gz
        if: always()
  push:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: success()
    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: bridgewatcher-image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Load Docker image
        run: |
          gunzip -c bridgewatcher.tar.gz | docker load
      - name: Push Docker image
        run: |
          IMAGE_TAG=${{ needs.build-and-test.outputs.image_version }}
          if [ -z "$IMAGE_TAG" ]; then
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:latest
          else
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:$IMAGE_TAG
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/bridgewatcher:latest
          fi
