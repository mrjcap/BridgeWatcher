name: PowerShell Lint, Docs

on:
  workflow_call:

jobs:
  lint-docs-pages:
    runs-on: self-hosted
    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Cache PowerShell modules
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: ~/.local/share/powershell/Modules
          key:
            ${{ runner.os }}-pwshmodules-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pwshmodules-

      - name: Install PowerShell modules (platyPS & PSScriptAnalyzer)
        run: |
          Install-Module platyPS -Scope CurrentUser -Force -AllowClobber
          Install-Module PSScriptAnalyzer -Scope CurrentUser -Force -AllowClobber

      - name: Run PSScriptAnalyzer (Error)
        run: |
          $results = Invoke-ScriptAnalyzer -Path . -Recurse -Severity Error
          if ($results.Count -gt 0) {
            $results | Format-Table
            Write-Error "PSScriptAnalyzer found issues!"
          }

      - name: Generate/update documentation with platyPS
        run: |
          $psd1 = Get-ChildItem -Path . -Filter *.psd1 -Recurse | Where-Object { $_.FullName -notmatch 'config' } | Select-Object -First 1
          if (-not $psd1) {
            Write-Error "No .psd1 file found! Cannot determine module name."
            exit 1
          }
          $moduleName = [System.IO.Path]::GetFileNameWithoutExtension($psd1.Name)
          $docsPath = 'docs'
          if (!(Test-Path $docsPath)) { New-Item -ItemType Directory -Path $docsPath }
          Import-Module $psd1.FullName -Force
          if (Get-ChildItem $docsPath\*.md -ErrorAction SilentlyContinue) {
            Update-MarkdownHelp -Path $docsPath -Force
          } else {
            New-MarkdownHelp -Module $moduleName -OutputFolder $docsPath -Force
          }

      - name: Commit docs
        uses: stefanzweifel/git-auto-commit-action@b863ae1933cb653a53c021fe36dbb774e1fb9403
        with:
          commit_message: 'docs: auto-generate PowerShell documentation'
          branch: ${{ github.head_ref || github.ref_name }}
          file_pattern: docs/*.md

      - name: Upload documentation as artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: powershell-docs
          path: docs/
